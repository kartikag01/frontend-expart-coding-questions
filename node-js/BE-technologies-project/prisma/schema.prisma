// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String  @id @default(uuid())
  firstName       String  @map("first_name")
  lastName        String? @map("last_name")
  profileImageURL String? @map("profile_image_url")

  email    String @unique
  password String
  // role     String @default("USER")
  salt     String

  createdAt DateTime @default(now())
  updatedAt DateTime @default(now())

  post    Posts[]
  comment Comment[]

  @@map("users")
}

model Posts {
  id            String    @id @default(uuid())
  author        User      @relation(fields: [authorId_id], references: [id], onDelete: Cascade)
  authorId_id   String
  title         String
  description   String
  comment_count BigInt    @default(0)
  created_at    DateTime  @default(now())
  comment       Comment[]

  @@map("posts")
}

model Comment {
  comment_id String   @id @default(uuid())
  post       Posts    @relation(fields: [post_id], references: [id])
  post_id    String
  user       User     @relation(fields: [user_id], references: [id])
  user_id    String
  comment    String
  create_at  DateTime @default(now())

  @@map("comments")
}
